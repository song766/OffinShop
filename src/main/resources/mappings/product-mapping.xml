<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductDAO">
	
	<!-- 신상품 목록(3개) -->
	<select id="getNewProductList" resultType="product">
		SELECT * FROM new_pro_view
	</select>
	
	<!-- 신상품 목록 전체(50개) -->
	<select id="getNewProductListAll" resultType="product">
		SELECT * FROM new_pro_view_all
	</select>
	
	<!-- 베스트 상품 목록(3개) -->
	<select id="getBestProductList" resultType="product">
		SELECT * FROM best_pro_view
	</select>
	
	<!-- 베스트 상품 목록(50개) -->
	<select id="getBestProductListAll" resultType="product">
		SELECT * FROM best_pro_view_all
	</select>
	
	<!-- 상품 번호로 하나의 상품정보 얻어오기 -->
	<select id="getProduct" resultType="product">
		SELECT * FROM product 
		WHERE pseq=#{pseq}
	</select>
	
	<!-- 상품 종류별(카테고리별 제품순으로) 상품 목록 얻어오기 -->
	<select id="getProductListByKind" resultType="product">
		SELECT * FROM product
		WHERE kind=#{kind}
		ORDER BY name
	</select>
	
	<!-- 상품 목록 ALL -->
	<select id="productListAll" resultType="product">
		SELECT * FROM product
		ORDER BY pseq desc
	</select>
	
	<!-- 상품 목록 조회 / name을 조건 String타입 , 상품을 조회하니까 resultType=product -->
	<select id="productListAllSearch" parameterType="String" resultType="product">
		SELECT *
		FROM product
		WHERE name LIKE '%' || #{name} || '%'
		ORDER BY pseq DESC
	</select>
	
	<!-- 조회한 총 상품의 개수 / name을 조건으로하여 string 타입, count가 조회니까 resultType = int -->
	<select id="countProductList" parameterType="String" resultType="int">
		SELECT count(*) FROM product
		WHERE name LIKE '%' || #{name} || '%'
	</select>
	
	<!-- 상품 목록 조회 / name을 조건 String타입 , 상품을 조회하니까 resultType=product -->
	<select id="listProduct" parameterType="String" resultType="product">
		SELECT pseq, regdate, name, price1, price2, useyn, bestyn
		FROM product
		WHERE name LIKE '%' || #{name} || '%'
		ORDER BY pseq DESC
	</select>
	
	<!-- 페이지번호 별 상품목록 조회 -->
	<select id="listWithPaging" parameterType="hashMap" resultType="product">
	<![CDATA[
		SELECT pseq, name, kind, price1, price2, useyn, bestyn, regdate
		FROM
		    (
		    SELECT row_number() over(ORDER BY pseq DESC) rn, pseq, name, kind, price1, price2, useyn, bestyn, regdate
		    FROM product
		    WHERE name LIKE '%' || #{key} || '%'
		    )
		WHERE rn <= #{criteria.pageNum} * #{criteria.rowsPerPage}
		AND rn > (#{criteria.pageNum}-1) * #{criteria.rowsPerPage}
	]]>
	</select>
	
	<!-- 상품 추가 -->
	<insert id="insertProduct">
		INSERT INTO product(pseq, name, kind, price1, price2, price3, 
						    content, image)
		VALUES(product_seq.NEXTVAL, #{name}, #{kind}, #{price1}, #{price2},
				#{price3}, #{content}, #{image})
	</insert>
	
	<!-- 상품 정보 수정 -->
	<update id="updateProduct">
		UPDATE product
		SET name=#{name}, kind=#{kind}, price1=#{price1}, price2=#{price2},
			price3=#{price3}, content=#{content}, image=#{image}, useyn=#{useyn},
			bestyn=#{bestyn}
		WHERE pseq=#{pseq}
	</update>
		
</mapper>